import os
import time
import xlwings as xw
from openpyxl import load_workbook
from openpyxl.styles import Font, PatternFill, Alignment, Border, Side
from openpyxl.worksheet.datavalidation import DataValidation

OUT_FILE = os.path.abspath("ADP_Interactive_Dashboard(updated)1.xlsx")

def build_xlsm():
    if os.path.exists(OUT_FILE):
        try:
            os.remove(OUT_FILE)
        except Exception as e:
            print("Could not remove existing file:", e)
            return

    app = xw.App(visible=False)
    try:
        wb = app.books.add()
        sht = wb.sheets[0]
        sht.name = "Overview"

        widths = [3, 20, 30, 3, 20, 20, 15, 15]
        for i, w in enumerate(widths, start=1):
            sht.api.Columns(i).ColumnWidth = w

        app.api.ActiveWindow.DisplayGridlines = True
        app.api.ActiveWindow.DisplayHeadings = False

        # Title
        header_color = (59, 89, 152)
        sht.range("B2:G3").merge()
        sht.range("B2").value = "PTD/YTD Results - USA"
        sht.range("B2").api.Font.Size = 18
        sht.range("B2").api.Font.Bold = True
        sht.range("B2").color = header_color
        sht.range("B2").api.Font.Color = 0xFFFFFF
        sht.range("B2").api.HorizontalAlignment = -4108
        sht.range("B2").api.VerticalAlignment = -4108

        # Client Info
        sht.range("B5:C9").color = (234, 242, 255)
        sht.range("B5:C5").merge(); sht.range("B5").value = "👤 Client Information"
        sht.range("B5").api.Font.Size = 12
        sht.range("B5").api.Font.Bold = True
        sht.range("B5").api.Font.Color = 0xFFFFFF
        sht.range("B6").value = "Client Number:"; sht.range("C6").value = ""
        sht.range("B7").value = "Company Name:";  sht.range("C7").value = ""
        sht.range("B8").value = "Country:";       sht.range("C8").value = "USA"
        sht.range("B9").value = "Language:";      sht.range("C9").value = "English"

        # Contact
        sht.range("E5:G9").color = (234, 242, 255)
        sht.range("E5:G5").merge(); sht.range("E5").value = "📞 Contact Details"
        sht.range("E5").api.Font.Size = 12
        sht.range("E5").api.Font.Bold = True
        sht.range("E5").api.Font.Color = 0xFFFFFF
        sht.range("E6").value = "Name:"; sht.range("F6").value = ""; sht.range("F6:G6").merge()
        sht.range("E7").value = "Phone Number:"; sht.range("F7").value = ""; sht.range("F7:G7").merge()
        sht.range("E8").value = "Email:"; sht.range("F8").value = ""; sht.range("F8:G8").merge()
        sht.range("E9").value = "ADP Contact:"; sht.range("F9").value = ""; sht.range("F9:G9").merge()

        # Period
        sht.range("B11:C13").color = (234, 242, 255)
        sht.range("B11:C11").merge(); sht.range("B11").value = "🗓️ Period"
        sht.range("B11").api.Font.Size = 12
        sht.range("B11").api.Font.Bold = True
        sht.range("B11").api.Font.Color = 0x2F5496
        sht.range("B12").value = "Date Received:"; sht.range("C12").value = ""
        sht.range("B13").value = "Date Processed:"; sht.range("C13").value = ""

        # Transaction Overview
        sht.range("E11:G13").color = (234, 242, 255)
        sht.range("E11:G11").merge(); sht.range("E11").value = "🧾 Transaction Overview"
        sht.range("E11").api.Font.Size = 12
        sht.range("E11").api.Font.Bold = True
        sht.range("E11").api.Font.Color = 0x2F5496
        sht.range("E12").value = "Record Type"
        sht.range("F12").value = "Record Count"
        sht.range("G12").value = "Total Records"
        sht.range("G13").formula = "=COUNTA(E15:E1000)"

        wb.sheets.add("Data").visible = False
        wb.save(OUT_FILE)
        wb.close()
    finally:
        app.quit()

    time.sleep(0.5)

    # Styling and protection
    wb2 = load_workbook(OUT_FILE)
    ws2 = wb2["Overview"]

    border = Border(left=Side(style='medium'), right=Side(style='medium'),
                    top=Side(style='medium'), bottom=Side(style='medium'))
    blue_fill = PatternFill("solid", fgColor="2F5496")
    gray_fill = PatternFill("solid", fgColor="D9D9D9")
    light_fill = PatternFill("solid", fgColor="F2F2F2")

    # Style headers/labels
    ws2.merge_cells("B2:G3")
    title = ws2["B2"]
    title.font = Font(size=20, bold=True, color="FFFFFF")
    title.fill = blue_fill
    title.alignment = Alignment(horizontal="center", vertical="center")

    for cell in ["B5", "E5", "B11", "E11"]:
        ws2[cell].font = Font(bold=True)
        ws2[cell].fill = gray_fill
        ws2[cell].border = border

    for r in range(6, 10):
        for col in ["B", "C", "E", "F"]:
            ws2[f"{col}{r}"].border = border
        ws2[f"B{r}"].font = Font(bold=True)
        ws2[f"E{r}"].font = Font(bold=True)

    for r in [12, 13]:
        ws2[f"B{r}"].font = Font(bold=True)
        ws2[f"B{r}"].border = border
        ws2[f"C{r}"].border = border

    for c in ["E12", "F12", "G12"]:
        cell = ws2[c]
        cell.font = Font(bold=True)
        cell.fill = light_fill
        cell.border = border
        cell.alignment = Alignment(horizontal="center")

    for row in range(2, 15):
        if row in [4, 10, 14]:
            continue
        for col in ["B", "C", "D", "E", "F", "G"]:
            if col == "D" and row not in [2, 3]:
                continue
            ws2[f"{col}{row}"].border = border

    # ---- LOCK/UNLOCK CELLS ----
    for row in ws2.iter_rows():
        for cell in row:
            cell.protection = cell.protection.copy(locked=True)

    # Unlock input cells (user can type here)
    input_cells = ["C6", "C7", "C12", "C13",  # Client Info & Period
                   "F6", "F7", "F8", "F9"]  # Contact Info
    for c in input_cells:
        ws2[c].protection = ws2[c].protection.copy(locked=False)

    # ---- DATA VALIDATION (Mandatory fields) ----
    dv_text = DataValidation(type="custom", formula1='LEN(TRIM(C6))>0', showErrorMessage=True)
    dv_text.error = "Client Number cannot be empty."
    ws2.add_data_validation(dv_text)
    dv_text.add(ws2["C6"])

    dv_text2 = DataValidation(type="custom", formula1='LEN(TRIM(C7))>0', showErrorMessage=True)
    dv_text2.error = "Company Name cannot be empty."
    ws2.add_data_validation(dv_text2)
    dv_text2.add(ws2["C7"])

    dv_name = DataValidation(type="custom", formula1='LEN(TRIM(F6))>0', showErrorMessage=True)
    dv_name.error = "Name cannot be empty."
    ws2.add_data_validation(dv_name)
    dv_name.add(ws2["F6"])

    dv_email = DataValidation(type="custom",
                              formula1='AND(ISNUMBER(SEARCH("@",F8)),ISNUMBER(SEARCH(".",F8)))',
                              showErrorMessage=True)
    dv_email.error = "Enter a valid email (e.g., xyz@abc.com)."
    ws2.add_data_validation(dv_email)
    dv_email.add(ws2["F8"])

    dv_date1 = DataValidation(type="date", operator="between", formula1="DATE(2000,1,1)", formula2="DATE(2100,12,31)")
    dv_date1.error = "Enter a valid date (dd/mm/yyyy)."
    ws2.add_data_validation(dv_date1)
    dv_date1.add(ws2["C12"])

    dv_date2 = DataValidation(type="date", operator="between", formula1="DATE(2000,1,1)", formula2="DATE(2100,12,31)")
    dv_date2.error = "Enter a valid date (dd/mm/yyyy)."
    ws2.add_data_validation(dv_date2)
    dv_date2.add(ws2["C13"])

    # Protect sheet
    ws2.protection.sheet = True
    ws2.protection.password = "adp123"
    ws2.protection.enable()

    wb2.save(OUT_FILE)
    wb2.close()

    print("✅ ADP_Interactive_Dashboard.xlsx created at:", OUT_FILE)

if __name__ == "__main__":
    build_xlsm()
