import os
import time
import xlwings as xw
from openpyxl import load_workbook
from openpyxl.styles import Font, PatternFill, Alignment, Border, Side
from openpyxl.worksheet.datavalidation import DataValidation

# === Output File Path ===
OUT_FILE = os.path.abspath("ADP_Interactive_Dashboard_Merged.xlsm")

def build_xlsm():
    # === Remove old file if exists ===
    if os.path.exists(OUT_FILE):
        try:
            os.remove(OUT_FILE)
        except Exception as e:
            print("Error removing file:", e)
            return

    # === Create Excel with xlwings (for ActiveX) ===
    app = xw.App(visible=False)
    wb = app.books.add()

    # Remove extra default sheets
    for sh in wb.sheets:
        if sh.name not in ["Sheet1"]:
            sh.delete()

    # Rename Sheet1 -> Overview
    overview = wb.sheets["Sheet1"]
    overview.name = "Overview"

    # Add TransactionData sheet
    trans_sheet = wb.sheets.add("TransactionData", after="Overview")

    # Save as xlsm
    wb.save(OUT_FILE)
    wb.close()
    app.quit()
    time.sleep(1)

    # === Open again with openpyxl for styling + validation ===
    wb = load_workbook(OUT_FILE, keep_vba=True)

    # === Styling & Validation for Overview sheet ===
    ws = wb["Overview"]

    # Example Header row formatting
    headers = ["Col", "Field name", "Description", "Reqd.", "Data type", "Length", "Decimals"]
    ws.append(headers)

    header_fill = PatternFill(start_color="B7DEE8", end_color="B7DEE8", fill_type="solid")
    header_font = Font(bold=True, color="000000")
    alignment = Alignment(horizontal="center", vertical="center")

    for col, header in enumerate(headers, 1):
        cell = ws.cell(row=1, column=col, value=header)
        cell.fill = header_fill
        cell.font = header_font
        cell.alignment = alignment

    # Example data validation rules
    dv_required = DataValidation(type="list", formula1='"Yes,No"', allow_blank=False)
    dv_email = DataValidation(type="custom", formula1='ISNUMBER(SEARCH("@",A2))', allow_blank=True)
    dv_date = DataValidation(type="date", operator="between", formula1="DATE(2000,1,1)", formula2="DATE(2100,12,31)")

    ws.add_data_validation(dv_required)
    ws.add_data_validation(dv_email)
    ws.add_data_validation(dv_date)

    dv_required.add(ws["D2"])  # Reqd.
    dv_email.add(ws["C2"])     # Description/email field example
    dv_date.add(ws["B2"])      # Field name/date example

    # === TransactionData sheet formatting ===
    ws2 = wb["TransactionData"]

    # Add a table header
    trans_headers = ["TransactionID", "User", "Amount", "Date"]
    ws2.append(trans_headers)
    for col, header in enumerate(trans_headers, 1):
        cell = ws2.cell(row=1, column=col, value=header)
        cell.fill = header_fill
        cell.font = header_font
        cell.alignment = alignment

    # Example rows
    ws2.append([1, "User1", 100, "2025-01-01"])
    ws2.append([2, "User2", 250, "2025-01-02"])

    # Record total at bottom
    total_row = ws2.max_row + 2
    ws2.cell(row=total_row, column=2, value="Total")
    ws2.cell(row=total_row, column=3, value=f"=SUM(C2:C{ws2.max_row})")

    # Borders for TransactionData
    thin = Side(border_style="thin", color="000000")
    border = Border(top=thin, left=thin, right=thin, bottom=thin)

    for row in ws2.iter_rows(min_row=1, max_row=ws2.max_row, min_col=1, max_col=4):
        for cell in row:
            cell.border = border

    # === Protect Sheets ===
    ws.protection.set_password("123")
    ws2.protection.set_password("123")

    # === Workbook Structure Protection ===
    wb.security.workbookPassword = "123"
    wb.security.lockStructure = True

    wb.save(OUT_FILE)
    wb.close()
    print("âœ… Workbook created successfully at:", OUT_FILE)


if __name__ == "__main__":
    build_xlsm()
