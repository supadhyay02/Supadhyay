import pandas as pd
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment, Border, Side, PatternFill, Color
from openpyxl.utils import get_column_letter
from openpyxl.drawing.image import Image
import datetime

def create_dashboard(output_file="client_dashboard.xlsx"):
    # Create a new workbook
    wb = Workbook()
    ws = wb.active
    ws.title = "Dashboard"
    
    # Set default font
    ws.sheet_properties.tabColor = "003366"
    
    # Dashboard Title
    ws['A1'] = "Sideboard"
    ws['A1'].font = Font(size=20, bold=True, color="003366")
    ws.merge_cells('A1:F1')
    
    # GlobalView Section
    ws['A3'] = "GlobalView"
    ws['A3'].font = Font(size=14, bold=True, color="003366")
    ws.merge_cells('A3:F3')
    
    # Client Info Section
    ws['A5'] = "Client Info"
    ws['A5'].font = Font(size=12, bold=True)
    ws.merge_cells('A5:B5')
    
    client_info = {
        "Client Number": "CL-12345",
        "Company Name": "Acme Corp",
        "Country": "USA English"
    }
    
    for i, (key, value) in enumerate(client_info.items(), start=6):
        ws[f'A{i}'] = key
        ws[f'B{i}'] = value
        ws[f'A{i}'].font = Font(bold=True)
    
    # Client Contact Section
    ws['D5'] = "Client Contact"
    ws['D5'].font = Font(size=12, bold=True)
    ws.merge_cells('D5:E5')
    
    client_contact = {
        "Name": "John Smith",
        "Phone Number": "(555) 123-4567",
        "E-Mail": "john.smith@acme.com",
        "ADP Contact": "ADP Rep Name"
    }
    
    for i, (key, value) in enumerate(client_contact.items(), start=6):
        ws[f'D{i}'] = key
        ws[f'E{i}'] = value
        ws[f'D{i}'].font = Font(bold=True)
    
    # Divider Line
    for row in range(10, 11):
        for col in range(1, 7):
            ws.cell(row=row, column=col).fill = PatternFill("solid", fgColor="DDDDDD")
    
    # Overview Section
    ws['A12'] = "Overview"
    ws['A12'].font = Font(size=14, bold=True, color="003366")
    ws.merge_cells('A12:F12')
    
    ws['A14'] = "T558B&T558C Reference +"
    ws['A14'].font = Font(bold=True)
    
    # PTD/YTD Results
    ws['A16'] = "PTD/YTD Results"
    ws['A16'].font = Font(bold=True)
    ws['B16'] = "Version 2.70"
    ws['D16'] = "USA"
    
    # Period Section
    ws['A18'] = "Period"
    ws['A18'].font = Font(size=12, bold=True)
    ws.merge_cells('A18:B18')
    
    today = datetime.datetime.now().strftime("%Y-%m-%d")
    period_data = {
        "Date Received": today,
        "Date Processed": today
    }
    
    for i, (key, value) in enumerate(period_data.items(), start=19):
        ws[f'A{i}'] = key
        ws[f'B{i}'] = value
        ws[f'A{i}'].font = Font(bold=True)
    
    # Transaction Overview
    ws['D18'] = "Transaction Overview"
    ws['D18'].font = Font(size=12, bold=True)
    ws.merge_cells('D18:F18')
    
    # Table headers
    ws['D19'] = "Record Type"
    ws['E19'] = "Record Count"
    ws['D19'].font = Font(bold=True)
    ws['E19'].font = Font(bold=True)
    
    # Table data
    transaction_data = [
        ["T558B&T558C", 0]
    ]
    
    for i, row in enumerate(transaction_data, start=20):
        ws[f'D{i}'] = row[0]
        ws[f'E{i}'] = row[1]
    
    # Total Records
    ws['D22'] = "Total Records"
    ws['E22'] = f"=SUM(E20:E21)"
    ws['D22'].font = Font(bold=True)
    ws['E22'].font = Font(bold=True)
    
    # Formatting
    # Set column widths
    column_widths = {'A': 15, 'B': 20, 'C': 5, 'D': 20, 'E': 15, 'F': 10}
    for col, width in column_widths.items():
        ws.column_dimensions[col].width = width
    
    # Add borders
    thin_border = Border(left=Side(style='thin'), 
                         right=Side(style='thin'), 
                         top=Side(style='thin'), 
                         bottom=Side(style='thin'))
    
    for row in ws.iter_rows(min_row=5, max_row=22, min_col=1, max_col=6):
        for cell in row:
            cell.border = thin_border
            cell.alignment = Alignment(horizontal='left', vertical='center')
    
    # Save the workbook
    wb.save(output_file)
    print(f"Dashboard created successfully: {output_file}")

# Run the function
create_dashboard()
